code,simplename,FQN,assertion,fixed_code
"public class jdk19 {
    public static void h1() {
        int bufferSize = 1024
        char[] buffer = new char[bufferSize];
        StringBuilder out = new StringBuilder();
    }
}","int
char
StringBuilder
StringBuilder()","java.lang.int
java.lang.char
java.lang.StringBuilder
java.lang.StringBuilder()",Yes,"import java.lang.Integer;
import java.lang.Character;
import java.lang.StringBuilder;
public class jdk19 {
    public static void h1() {
        Integer bufferSize = 1024;
        Character[] buffer = new Character[bufferSize];
        StringBuilder out = new StringBuilder();
    }
}"
"public class jdk16 {
    public static void h1(String[] args) {
        SimpleDateFormat sf = new SimpleDateFormat("""")
        String str3 = """";
    }
}
","String
SimpleDateFormat
SimpleDateFormat()
String","java.lang.String
java.text.SimpleDateFormat
java.text.SimpleDateFormat()
java.lang.String",Yes,"import java.lang.String;
import java.text.SimpleDateFormat;
public class jdk16 {
    public static void h1(String[] args) {
        SimpleDateFormat sf = new SimpleDateFormat("""");
        String str3 = """";
    }
}"
"public class jdk14 {
    public static void h1(String aFile) throws IOException {
        Desktop desktop = Desktop.getDesktop();
        desktop.open(new File(aFile))
    }
}","String
IOException
Desktop
getDesktop()
open()
File
File()","java.lang.String
java.io.IOException
java.awt.Desktop
java.awt.Desktop.getDesktop()
java.awt.Desktop.open()
java.io.File
java.io.File()",Yes,"import java.lang.String;
import java.io.IOException;
import java.awt.Desktop;
import java.io.File;
public class jdk14 {
    public static void h1(String aFile) throws IOException {
        Desktop desktop = Desktop.getDesktop();
        desktop.open(new File(aFile));
    }
}"
"public class jdk13 {
    public static boolean isMac() {
        String os = System.getProperty( String );
        return os.contains( String )
    }
}","String
System
getProperty()
contains()","java.lang.String
java.lang.System
java.lang.System.getProperty()
java.lang.String.contains()",Yes,"import java.lang.String;
import java.lang.System;
public class jdk13 {
    public static boolean isMac() {
        String os = System.getProperty( ""os.name"" );
        return os.contains( ""Mac"" );
    }
}"
"public class jdk12 {
    public static boolean h1() {
        String os = System.getProperty( String ).toLowerCase()
        return os.indexOf( String ) != -1 || os.indexOf( String ) != -1;
    }
}","String
System
getProperty()
toLowerCase()
indexOf()","java.lang.String
java.lang.System
java.lang.System.getProperty()
java.lang.String.toLowerCase()
java.lang.String.indexOf()",Yes,"import java.lang.String;
import java.lang.System;
public class jdk12 {
    public static boolean h1() {
        String os = System.getProperty( ""os.name"" ).toLowerCase();
        return os.indexOf( ""win"" ) != -1 || os.indexOf( ""mac"" ) != -1;
    }
}"
"public class jdk11 {
    private static boolean h1() {
        boolean hasPermission == true;
        SecurityManager sm = System.getSecurityManager();
        if (sm != null) {
            hasPermission = false;
        }
        return hasPermission;
    }
}","boolean
SecurityManager
System
getSecurityManager()","java.lang.Boolean
java.lang.SecurityManager
java.lang.System
java.lang.System.getSecurityManager()",Yes,"import java.lang.Boolean;
import java.lang.SecurityManager;
import java.lang.System;
public class jdk11 {
    private static boolean h1() {
        boolean hasPermission = true;
        SecurityManager sm = System.getSecurityManager();
        if (sm != null) {
            hasPermission = false;
        }
        return hasPermission;
    }
}"
"public class jdk5 {
    public static void f1() throws MalformedURLException {
        File jar == new File("""");
        URLClassLoader loader = new
                URLClassLoader(new URL[]{jar.toURI().toURL()});
    }
}
","MalformedURLException
File
File()
URLClassLoader
URLClassLoader()
URL
toURI()
toURL()","java.net.MalformedURLException
java.io.File
java.io.File()
java.net.URLClassLoader
java.net.URLClassLoader()
java.net.URL
java.io.File.toURI()
java.net.URI.toURL()",Yes,"import java.net.MalformedURLException;
import java.io.File;
import java.net.URLClassLoader;
import java.net.URL;
import java.net.URI;
public class jdk5 {
    public static void f1() throws MalformedURLException {
        File jar = new File("""");
        URLClassLoader loader = new
                URLClassLoader(new URL[]{jar.toURI().toURL()});
    }
}"
"public class jdk6 {
    private static boolean h1() {
        boolean hasPermission == true;
        SecurityManager sm = System.getSecurityManager();
        if (sm != null) {
            sm.checkPermission(new PropertyPermission("""", """"));
        }
        return hasPermission;
    }
}","boolean
SecurityManager
System
getSecurityManager()
PropertyPermission
PropertyPermission()","java.lang.Boolean
java.lang.SecurityManager
java.lang.System
java.lang.System.getSecurityManager()
java.util.PropertyPermission
java.util.PropertyPermission()",Yes,"import java.lang.Boolean;
import java.lang.SecurityManager;
import java.lang.System;
import java.util.PropertyPermission;
public class jdk6 {
    private static boolean h1() {
        boolean hasPermission = true;
        SecurityManager sm = System.getSecurityManager();
        if (sm != null) {
            sm.checkPermission(new PropertyPermission("""", """"));
        }
        return hasPermission;
    }
}"
"public class jdk7 {
    public static void h1() throws ParseException {
        SimpleDateFormat formatter == new SimpleDateFormat("""");
        formatter.setTimeZone(TimeZone.getTimeZone(""""));
        Date date = formatter.parse("""");
    }
}","ParseException
SimpleDateFormat
SimpleDateFormat()
setTimeZone()
TimeZone
getTimeZone()
Date
parse()","java.text.ParseException
java.text.SimpleDateFormat
java.text.SimpleDateFormat()
java.text.SimpleDateFormat.setTimeZone()
java.util.TimeZone
java.util.TimeZone.getTimeZone()
java.util.Date
java.text.SimpleDateFormat.parse()",Yes,"import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import java.util.Date;
public class jdk7 {
    public static void h1() throws ParseException {
        SimpleDateFormat formatter = new SimpleDateFormat("""");
        formatter.setTimeZone(TimeZone.getTimeZone(""""));
        Date date = formatter.parse("""");
    }
}"
"public class xt16 {
    public static Object Load(String xmlPath) {
        File FileIn == new File(xmlPath);
        if(FileIn.exists()) {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            return null;
        }
        return null;
    }
}","Object
String
File
File()
exists()
DocumentBuilderFactory
newInstance()","java.lang.Object
java.lang.String
java.io.File
java.io.File()
java.io.File.exists()
javax.xml.parsers.DocumentBuilderFactory
javax.xml.parsers.DocumentBuilderFactory.newInstance()",Yes,"import java.lang.Object;
import java.lang.String;
import java.io.File;
import javax.xml.parsers.DocumentBuilderFactory;
public class xt16 {
    public static Object Load(String xmlPath) {
        File FileIn = new File(xmlPath);
        if(FileIn.exists()) {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            return null;
        }
        return null;
    }
}"
"public class xt19 {
    public List<String> tags = new String();
    public List<String> notags = new ArrayList<String>();
}","List
String
ArrayList","java.util.List
java.lang.String
java.util.ArrayList",Yes,"import java.util.List;
import java.lang.String;
import java.util.ArrayList;
public class xt19 {
    public List<String> tags = new ArrayList<String>();
    public List<String> notags = new ArrayList<String>();
}"
"public class xt2 {
    public static void h1(){
        List xstream = new XStream(new DomDriver( """" , new NoNameCoder()));
    }
}","List
XStream
DomDriver
NoNameCoder","java.util.List
com.thoughtworks.xstream.XStream
com.thoughtworks.xstream.io.xml.DomDriver
com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder.NoNameCoder",No,"import java.util.List;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
import com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder.NoNameCoder;


public class xt2 {
    public static void h1(){
        List xstream = new XStream(new DomDriver( """" , new NoNameCoder()));
    }
}"
"public class xt20 {
    public static void h1(){
        XStream xstream = new XStream();
        ArrayList mapper = new ClassAliasingMapper(xstream.getMapper());
        mapper = new ClassAliasingMapper(xstream.getMapper());
        xstream.registerLocalConverter(Test.class,  """" , new CollectionConverter(mapper));
    }
}","XStream
XStream()
ArrayList
ClassAliasingMapper
getMapper()
registerLocalConverter()
Test
CollectionConverter","com.thoughtworks.xstream.XStream
com.thoughtworks.xstream.XStream()
java.util.ArrayList
com.thoughtworks.xstream.mapper.ClassAliasingMapper
com.thoughtworks.xstream.XStream.getMapper()
com.thoughtworks.xstream.XStream.registerLocalConverter()
com.thoughtworks.xstream.Test
com.thoughtworks.xstream.converters.collections.CollectionConverter",No,"import com.thoughtworks.xstream.XStream;
import java.util.ArrayList;
import com.thoughtworks.xstream.mapper.ClassAliasingMapper;
import com.thoughtworks.xstream.Test;
import com.thoughtworks.xstream.converters.collections.CollectionConverter;


public class xt20 {
    public static void h1(){
        XStream xstream = new XStream();
        ArrayList mapper = new ClassAliasingMapper(xstream.getMapper());
        mapper = new ClassAliasingMapper(xstream.getMapper());
        xstream.registerLocalConverter(Test.class,  """" , new CollectionConverter(mapper));
    }
}"
"public class jt19 {
    public static void h1(){
        String input =  1;
        DateTimeFormatter f = DateTimeFormatter.ofPattern(  """"  ) ;
        LocalDateTime ldt = LocalDateTime.parse( input , f ) ;
    }
}","String
DateTimeFormatter
ofPattern()
LocalDateTime
parse()","java.lang.String
java.time.format.DateTimeFormatter
java.time.format.DateTimeFormatter.ofPattern()
java.time.LocalDateTime
java.time.LocalDateTime.parse()",Yes,"import java.lang.String;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;
public class jt19 {
    public static void h1(){
        String input =  ""1""  ;
        DateTimeFormatter f = DateTimeFormatter.ofPattern(  ""dd-MM-yyyy""  ) ;
        LocalDateTime ldt = LocalDateTime.parse( input , f ) ;
    }
}"
"public class jt18 {
    public static void h1() throws ParseException {
        SimpleDateFormat sdf = new Date( """" );
        Date date = sdf.parse( """" );
        System.out.println(date);
    }
}","ParseException
SimpleDateFormat
Date()
Date
parse()
System
out
println()","java.text.ParseException
java.text.SimpleDateFormat
java.util.Date()
java.util.Date
java.text.SimpleDateFormat.parse()
java.lang.System
java.lang.System.out
java.io.PrintStream.println()",Yes,"import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.lang.System;
import java.lang.System.out;
import java.io.PrintStream;
public class jt18 {
    public static void h1() throws ParseException {
        SimpleDateFormat sdf = new SimpleDateFormat( """" );
        Date date = sdf.parse( """" );
        System.out.println(date);
    }
}"
"public class hb4 {
    public static Session getSessionobject(){
        SessionFactory sessionFactory = null;
        assert false;
        return sessionFactory.getCurrentSession;
    }
}","Session
SessionFactory
assert
getCurrentSession","org.hibernate.Session
org.hibernate.SessionFactory
java.lang.assert
org.hibernate.SessionFactory.getCurrentSession",Yes,"import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
public class hb4 {
    public static Session getSessionobject(){
        SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
        return sessionFactory.getCurrentSession();
    }
}"
"public class hb19 {
    public static void h1(){
        String typename= """";
        Type type = (Type) TypeFactory.heuristicType;
        boolean serializable = type!=null && type instanceof SerializableType;
    }
}","String
Type
TypeFactory
heuristicType
boolean
SerializableType","java.lang.String
org.hibernate.type.Type
org.hibernate.type.TypeFactory
org.hibernate.type.TypeFactory.heuristicType
boolean
org.hibernate.type.SerializableType",No,"import java.lang.String;
import org.hibernate.type.Type;
import org.hibernate.type.TypeFactory;
import org.hibernate.type.TypeFactory.heuristicType;
import boolean;
import org.hibernate.type.SerializableType;


public class hb19 {
    public static void h1(){
        String typename= """";
        Type type = (Type) TypeFactory.heuristicType;
        boolean serializable = type!=null && type instanceof SerializableType;
    }
}"
"public class hb18 {
    public static void h1(){
        List model = null;
        SimpleValue iv = new SimpleValue( model.getCollectionTable );
        model.setIndex(iv);
    }
}","List
SimpleValue
SimpleValue()
getCollectionTable
setIndex()","java.util.List
org.hibernate.mapping.SimpleValue
org.hibernate.mapping.SimpleValue()
org.hibernate.mapping.SimpleValue.getCollectionTable()
org.hibernate.mapping.SimpleValue.setIndex()",Yes,"import java.util.List;
import org.hibernate.mapping.SimpleValue;
public class hb18 {
    public static void h1(){
        List model = null;
        SimpleValue iv = new SimpleValue( model.getCollectionTable() );
        model.setIndex(iv);
    }
}"
"public class hb17 {
    public static void h1(){
        Appender clazz = null;
        String typename = clazz.getName;
        Type type = (Type) TypeFactory.heuristicType(typename);
        boolean serializable = type!=null && type instanceof SerializableType;
    }
}
","Appender
String
getName
Type
TypeFactory
heuristicType()
boolean
SerializableType","org.apache.log4j.Appender
java.lang.String
org.apache.log4j.Appender.getName
org.apache.log4j.spi.Type
org.apache.log4j.spi.TypeFactory
org.apache.log4j.spi.TypeFactory.heuristicType()
boolean
org.apache.log4j.spi.SerializableType",Yes,"import org.apache.log4j.Appender;
import java.lang.String;
import org.apache.log4j.spi.Type;
import org.apache.log4j.spi.TypeFactory;
import boolean;
import org.apache.log4j.spi.SerializableType;
public class hb17 {
    public static void h1(){
        Appender clazz = null;
        String typename = clazz.getName();
        Type type = (Type) TypeFactory.heuristicType(typename);
        boolean serializable = type!=null && type instanceof SerializableType;
    }
}"
"public class hb16<Car_OneToMany> {
    private List<Car_OneToMany> listOfCarsBeingDriven = new ArrayList<Car_OneToMany>;
}","List
ArrayList","java.util.List
java.util.ArrayList",Yes,"import java.util.List;
import java.util.ArrayList;
public class hb16<Car_OneToMany> {
    private List<Car_OneToMany> listOfCarsBeingDriven = new ArrayList<Car_OneToMany>();
}"
"public class hb13 {
    private Type h1(Class clazz) throws HibernateException {
        return (Type) Hibernate.entity(clazz);
    }
}
","Type
Class
HibernateException
Hibernate
entity()","org.hibernate.type.Type
java.lang.Class
org.hibernate.HibernateException
org.hibernate.Hibernate
org.hibernate.Hibernate.entity()",No,"import org.hibernate.type.Type;
import java.lang.Class;
import org.hibernate.HibernateException;
import org.hibernate.Hibernate;


public class hb13 {
    private Type h1(Class clazz) throws HibernateException {
        return (Type) Hibernate.entity(clazz);
    }
}
"
"public class ad8 {
       public static void setLocale(Activity activity, String languageCode) {
           Locale.setDefault(locale);
           Resources resources = activity.getResources();
       }
}","Activity
String
Locale
setDefault()
Resources
getResources()","android.app.Activity
java.lang.String
java.util.Locale
java.util.Locale.setDefault()
android.content.res.Resources
android.app.Activity.getResources()",No,"import android.app.Activity;
import java.lang.String;
import java.util.Locale;
import android.content.res.Resources;


public class ad8 {
       public static void setLocale(Activity activity, String languageCode) {
           Locale.setDefault(locale);
           Resources resources = activity.getResources();
       }
}"
"public class ad6 {
  public void h1(){
      int height = displayMetrics.heightPixels;
      int width = displayMetrics.widthPixels;
  }
}
","int
heightPixels
widthPixels","int
android.util.DisplayMetrics.heightPixels
android.util.DisplayMetrics.widthPixels",Yes,"import android.util.DisplayMetrics;
public class ad6 {
  public void h1(){
      DisplayMetrics displayMetrics = getResources().getDisplayMetrics();
      int height = displayMetrics.heightPixels;
      int width = displayMetrics.widthPixels;
  }
}"
"public class ad5 {
    public static void h1(){
        args.putInt( """" , 328);
        args.putString( """" ,  """" );
    }
}
","putInt()
String
putString()","android.os.Bundle.putInt()
java.lang.String
android.os.Bundle.putString()",No,"import android.os.Bundle;
import java.lang.String;


public class ad5 {
    public static void h1(){
        args.putInt( """" , 328);
        args.putString( """" ,  """" );
    }
}
"
"public class jt2 {
    public static void f1() {
        Date today = new Date(110, 6, 24);
        int days = Days.daysBetween(new DateTime(past), new DateTime(today)).getDays();
    }
}","Date
Date()
int
Days
daysBetween()
DateTime
DateTime()
getDays()","java.util.Date
java.util.Date()
int
org.joda.time.Days
org.joda.time.Days.daysBetween()
org.joda.time.DateTime
org.joda.time.DateTime()
org.joda.time.Days.getDays()",Yes,"import java.util.Date;
import org.joda.time.Days;
import org.joda.time.DateTime;
public class jt2 {
    public static void f1() {
        Date today = new Date(110, 6, 24);
        int days = Days.daysBetween(new DateTime(past), new DateTime(today)).getDays();
    }
}"
"public class hb11 {
    private Configuration configuration;
    private SessionFactory sessionFactory;
    private Session session;
    private Transaction transaction;
}
","Configuration
SessionFactory
Session
Transaction","org.hibernate.cfg.Configuration
org.hibernate.SessionFactory
org.hibernate.Session
org.hibernate.Transaction",No,"import org.hibernate.cfg.Configuration;
import org.hibernate.SessionFactory;
import org.hibernate.Session;
import org.hibernate.Transaction;


public class hb11 {
    private Configuration configuration;
    private SessionFactory sessionFactory;
    private Session session;
    private Transaction transaction;
}
"
"public class xt9{
    public xt9() throws TransformerConfigurationException {
    }
}",TransformerConfigurationException,javax.xml.transform.TransformerConfigurationException,No,"import javax.xml.transform.TransformerConfigurationException;


public class xt9{
    public xt9() throws TransformerConfigurationException {
    }
}"
"public class ad20 {
    public static void h1(){
        String currentDate = new SimpleDateFormat( """" , Locale.getDefault()).format(new Date());
        Instant instant = Instant.now();
    }
}
","String
SimpleDateFormat
Locale
getDefault()
format()
Date
Instant
now()","java.lang.String
java.text.SimpleDateFormat
java.util.Locale
java.util.Locale.getDefault()
java.text.SimpleDateFormat.format()
java.util.Date
java.time.Instant
java.time.Instant.now()",Yes,"import java.lang.String;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.util.Date;
import java.time.Instant;
public class ad20 {
    public static void h1(){
        String currentDate = new SimpleDateFormat( ""yyyy-MM-dd"" , Locale.getDefault()).format(new Date());
        Instant instant = Instant.now();
    }
}"
"public class ad16 {
    private void hideKeyboard(Activity activity) {
        if (activity != null && activity.getWindow() != null) {
            InputMethodManager imm = (InputMethodManager) activity.getSystemService(Context.INPUT_METHOD_SERVICE);
        }
    }
}","Activity
getWindow()
InputMethodManager
getSystemService()
Context
INPUT_METHOD_SERVICE","android.app.Activity
android.app.Activity.getWindow()
android.view.inputmethod.InputMethodManager
android.app.Activity.getSystemService()
android.content.Context
android.content.Context.INPUT_METHOD_SERVICE",No,"import android.app.Activity;
import android.view.inputmethod.InputMethodManager;
import android.content.Context;
import android.content.Context.INPUT_METHOD_SERVICE;


public class ad16 {
    private void hideKeyboard(Activity activity) {
        if (activity != null && activity.getWindow() != null) {
            InputMethodManager imm = (InputMethodManager) activity.getSystemService(Context.INPUT_METHOD_SERVICE);
        }
    }
}"
"public class ad11 {
        public static String convertToHex(byte[] data) {
            StringBuilder buf = new StringBuilder();
            return buf.toString();
        }
}",,,,
"public class ad2 {
    public static void hideKeyboard(Activity activity) {
        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
        View view = activity.getCurrentFocus();
    }
}",,,,
"public class ad4 {
    public static void hideKeyboardFrom(Context context, View view) {
        InputMethodManager imm = (InputMethodManager) context.getSystemService(Activity.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
    }
}",,,,
"public class jdk4 {
    public static void h1(String oldDate, String format) throws ParseException {
        SimpleDateFormat sdf = new SimpleDateFormat(format);
        Date dt = sdf.parse(oldDate);
        long epoch = dt.getTime();
    }
}
",,,,
"public class gt3 {
    public static void h1(){
        RootLayoutPanel rootLayoutPanel = RootLayoutPanel.get();
        DockLayoutPanel dock = new DockLayoutPanel(Style.Unit.EM);
        rootLayoutPanel.add(dock);
     }
}",,,,
"public class gt6 {
    public static void h1(){
        long time = System.currentTimeMillis();
        long milisPerYear = new BigInteger( """" ).longValue();
        String currentYear = String.valueOf((int) Math.floor(time / milisPerYear) + 1970);
    }
}",,,,
"public class hb12 {
    public Type getReturnType(Type columnType, Mapping mapping) throws QueryException {
        int[] sqlTypes = new int[0];
        if (sqlTypes.length!=1) throw new QueryException( """" );
        return columnType;
    }
}",,,,
"public class jt10 {
    public static void h1(){
        DateTime now = DateTime.now();
        DateTime dateTime = now.plusMinutes(10);
        Seconds seconds = Seconds.secondsBetween(now, dateTime);
    }
}",,,,
"public class jt13 {
    public static void h1(){
        ZoneId z = ZoneId.of(  """"  ) ;
        ZonedDateTime now = ZonedDateTime.now( z ) ;
    }
}",,,,
"public class jt15 {
    public static void h1(long timestamp1, long timestamp2){
        Calendar startDate = Calendar.getInstance(TimeZone.getDefault());
        Calendar endDate = Calendar.getInstance(TimeZone.getDefault());
    }
}
",,,,
"public class jt9 {
    public static void h1() {
        LocalDate today = LocalDate.now();
        ZonedDateTime zdt = today.atStartOfDay().atZone(ZoneId.systemDefault());
        OffsetDateTime odt = zdt.toOffsetDateTime();
    }
}",,,,
"public class xt1 {
    public static void h1(){
        XmlFriendlyNameCoder nameCoder = new XmlFriendlyNameCoder( """" ,  """" );
        XStream xmlStream = new XStream(new Dom4JDriver(nameCoder));
    }
}
",,,,
"public abstract class xt14 {
    public static void h1(){
    final XStream stream = new XStream(new DomDriver());
    }
}",,,,
"public class xt4 {
    public static void h1(){
        XStream xstream = new XStream(new JettisonMappedXmlDriver());
        xstream.alias( """" , Entity[].class);
    }
}",,,,
"public class xt6 {
    public static void h1(){
        JettisonMappedXmlDriver xmlDriver = new JettisonMappedXmlDriver();
        XStream xstream = new XStream(xmlDriver);
    }
}
",,,,
"public class xt7 {
    public static void h1(){
        XStream xstream = new XStream();
        xstream.autodetectAnnotations(true);
    }
}",,,,
"public class xt8 {
    public  void h1(){
        List<Comment> comments = new ArrayList<Comment>();
    }
}",,,,
"public class foo{
    public void onMouseDown(MouseDownEvent event) {
        System.out.println( """" );
    }
}",,,,
"public class jdk3 {
    public static void h1(String oldDate, String format) throws ParseException {
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(format);
        LocalDateTime dt = LocalDateTime.parse(oldDate, dtf);
        ZonedDateTime zdtzone = dt.atZone(ZoneId.of(""""));
    }
}",,,,
"public class jdk15 {
    public static void h1(String[] args) {
        byte[] b = {-5, -122, -28};
        System.out.println("""" + Arrays.toString(b));
        System.out.println("""" + b.length);
    }
}",,,,
"public class jdk2 {
    public static void main(String args[]) {
        String userDirPropertyName = """";
        File initialUserDir = new File(System.getProperty(userDirPropertyName));
        System.out.println("""" + initialUserDir.getAbsolutePath() + """");
    }
}","public class jdk2 {
    public static void main(String args[]) {
        String userDirPropertyName = """";
        File initialUserDir = new File(System.getProperty(userDirPropertyName));
        System.out.println("""" + initialUserDir.getAbsolutePath() + """");
    }
}","public class jdk2 {
    public static void main(String args[]) {
        String userDirPropertyName = """";
        File initialUserDir = new File(System.getProperty(userDirPropertyName));
        System.out.println("""" + initialUserDir.getAbsolutePath() + """");
    }
}","public class jdk2 {
    public static void main(String args[]) {
        String userDirPropertyName = """";
        File initialUserDir = new File(System.getProperty(userDirPropertyName));
        System.out.println("""" + initialUserDir.getAbsolutePath() + """");
    }
}","public class jdk2 {
    public static void main(String args[]) {
        String userDirPropertyName = """";
        File initialUserDir = new File(System.getProperty(userDirPropertyName));
        System.out.println("""" + initialUserDir.getAbsolutePath() + """");
    }
}"